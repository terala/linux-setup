---
- name: Initialize variables
  ansible.builtin.include_vars: vars/iosevka.yml

- name: Fetch the latest iosevka release
  ansible.builtin.uri:
    url: "{{ iosevka_releases_url }}"
    method: GET
  register: releases

- name: Create fonts directory for iosevka
  become: true
  ansible.builtin.file:
    path: "{{ base_fonts_dir }}"
    state: directory
    mode: u=rwx,go=rx

- name: Create directory for version
  become: true
  vars:
    full_tag: "{{ releases | community.general.json_query('json.tag_name') }}"
  ansible.builtin.file:
    path: "{{ base_fonts_dir }}/{{ full_tag }}"
    state: directory
    mode: u=rwx,go=rx

- name: Fetch any existing files
  vars:
    full_tag: "{{ releases | community.general.json_query('json.tag_name') }}"
    dirname: "{{ base_fonts_dir }}/{{ full_tag }}"
  ansible.builtin.find:
    path: "{{ dirname }}"
    pattern: "*.ttc"
    file_type: file
  register: ttc_files

- name: Download and install fonts
  vars:
    rgx: ".zip"
    replace: ""
    ttc_list: "{{ ttc_files.files | flatten | map(attribute='path') }}"
    mapped_list: "{{ ttc_list | map('regex_replace', rgx, replace) | list }}"
    diff_list: "{{ iosevka_variants | difference(mapped_list) }}"
    full_tag: "{{ releases | community.general.json_query('json.tag_name') }}"
    version: "{{ full_tag[1:] }}"
    fontname: "SuperTTC-{{ item }}-{{ version }}.zip"
    query: "json.assets[?name=='{{ fontname }}']"
    asset: "{{ releases | community.general.json_query(query) | first }}"
  ansible.builtin.unarchive:
    src: "{{ asset['browser_download_url'] }}"
    dest: "{{ base_fonts_dir }}/{{ full_tag }}"
    remote_src: true
    mode: ugo=r
  register: fonts_installed
  loop: "{{ diff_list }}"

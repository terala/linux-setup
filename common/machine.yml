---
- name: Machine wide tasks
  hosts: linux
  become: true
  vars:
    machine:
      aliases_path: /etc/profile.d/aliases.sh

  tasks:

    - name: Use ZRAM for swap
      ansible.builtin.include_tasks: zramswap.yml

    - name: Use a safer umask default for Debian distros
      ansible.builtin.lineinfile:
        path: "{{ item }}"
        regexp: "^session optional\\s+pam_umask.so$"
        line: "session optional pam_umask.so umask={{ umask }}"
      loop:
        - /etc/pam.d/common-session
        - /etc/pam.d/common-session-noninteractive
      when: ansible_os_family == 'Debian'

    - name: Use a safer umask default for RedHat distros
      ansible.builtin.lineinfile:
        path: "{{ item }}"
        regexp: "^session\\s+optional\\s+pam_umask.so"
        line: "session optional pam_umask.so umask={{ umask }} silent"
      loop:
        - /etc/pam.d/postlogin
      when: ansible_os_family == 'RedHat'


    - name: Deploy common aliases
      ansible.builtin.template:
        src: aliases.sh.j2
        dest: "{{ machine.aliases_path }}"
        mode: u=rw,go=r

    - name: Default shell and skel files for new users
      block:
        - name: Enable skeleton files for all new users
          ansible.builtin.lineinfile:
            path: /etc/default/useradd
            regexp: ^[# ]*SKEL=(.*)$
            line: SKEL=\g<1>
            state: present
            backrefs: true

        - name: Load tmux file configuration
          ansible.builtin.include_vars: vars/tmux-config.yml

        - name: Deploy tmux configuration for all new users
          ansible.builtin.get_url:
            url: "{{ item.url }}"
            dest: "/etc/skel/{{ item.filename }}"
            mode: u=rw,go=r
          loop: "{{ tmux.files }}"

        - name: Enable bash completion for all new users
          ansible.builtin.template:
            src: global-.bashrc.j2
            dest: /etc/skel/.bashrc
            mode: u=rw,go=r

    - name: Admin group for sudo access
      block:
        - name: Create admin group
          ansible.builtin.group:
            name: "{{ sudo_group | mandatory }}"
            state: present

        - name: Deploy sudoers file
          ansible.builtin.template:
            src: admin.sudo.j2
            dest: "/etc/sudoers.d/{{ sudo_group | mandatory }}"
            owner: root
            group: root
            mode: "u=rw"
